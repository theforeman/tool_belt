[ ] Make this post a wiki

## Roles

* Release Owner: <%= owner %>
* Release Engineer: <%= engineer %>

# When Ready to Release

## Release Owner

- [ ] Request Hammer CLI Katello release from maintainers
- [ ] Request Virt Who Configure release from maintainers
- [ ] Request any other releases as needed from the release owners (consult the `:repos:` section of `configs/katello/<%= short_version %>.yaml`)
<% unless is_rc %>
- [ ] Change Redmine version <%= full_version %> state to Closed
<% end %>
- [ ] Do Cherry-picks: Clone [tool_belt](https://github.com/theforeman/tool_belt)
  - [ ] If any minor versions of Katello have been added to Redmine since the last cherry-pick, make sure to include them in `prior_releases` in configs/katello/<%= short_version %>.yaml
  - [ ] Run `./tools.rb setup-environment configs/katello/<%= short_version %>.yaml`
  - [ ] Run `./tools.rb cherry-picks --version <%= full_version %> configs/katello/<%= short_version %>.yaml`
  - [ ] Open a PR in Katello release branch.  Make sure the PR name starts with [CP] to prevent our automations from adding it to Redmine issues.
  - [ ] Using `git cherry-pick -x` as needed, verify tickets in the cherry_picks_<%= full_version %> file are accounted for, or additionally cherry-pick them.  Recommended: Do this in tool_belt's checkout of Katello, in `repos/katello/<%= full_version %>/katello`. This way when you run cherry-picks again, tool_belt will be aware of any picks already completed.
  - [ ] For any cherry-picks that are not needed (including Redmine trackers) you can add them to the `:ignores:` section of `tool_belt` in `configs/katello/<%= short_version %>.yaml`
- [ ] Check for outdated deprecation warnings in the current and next release with `./tools check-deprecation-warnings configs/katello/<%= short_version %>.yaml`. Follow the instructions in the output of the command. Don't forget to create any Redmine issues needed!

- [ ] Bump version:
  - [ ] Open a PR (or use cherry-pick PR) against the release branch which updates `lib/katello/version.rb` to <%= full_version %>
  - [ ] `git pull` to make sure you have the latest changes
  - [ ] Commit: `git commit -m "Release <%= full_version %>"`
  - [ ] Ensure that the commit above is the _last_ commit and there are no commits after it. This is the commit that will get tagged. (Rearrange commits with `git rebase -i` if needed.)
- [ ] Once the PR is merged, perform the following in the Katello release branch (the real one, not your fork):
  - [ ] Tag: `git tag -s -m "Release <%= full_version %>" <%= full_version %>`
  - [ ] Push: `git push --follow-tags` (Must be pushed directly to the release branch, as pull request merges will not preserve tags.)
  - [ ] Generate source gem: `gem build katello.gemspec`
  - [ ] Ensure you have a working login and password at rubygems.org
  - [ ] Push gem: `gem push katello-<%= full_version %>.gem`
- [ ] Inform the delivery team that the gem is published

# Once Source is Available
<% unless is_rc -%>

**Note** it is considered good practice to release on a day when the next day is a working day. This means no releases on Fridays or on the day before a holiday.
<% end -%>

## Release Engineer

- [ ] Update release version similar to [here](https://github.com/theforeman/theforeman-rel-eng/commit/2029a9688da00d9c385c3438dd71b594ba5f728e)
- [ ] Update `katello`, `katello-repos` and `rubygem-katello` 
  - [ ] [`PROJECT=katello VERSION=<%= short_version %> ./bump_rpm_packaging`](https://github.com/theforeman/theforeman-rel-eng/blob/master/bump_rpm_packaging)
- [ ] Merge packaging PR once job is green
- [ ] Wait for [Jenkins to build the packages](https://ci.theforeman.org/job/foreman-packaging-rpm-<%= short_version %>-release/) (replace <%= short_version %> with the matching Foreman version)
- [ ] [Download](https://github.com/theforeman/theforeman-rel-eng/blob/master/download_rpms), [sign](https://github.com/theforeman/theforeman-rel-eng/blob/master/sign_rpms), [upload RPM signatures](https://github.com/theforeman/theforeman-rel-eng/blob/master/upload_rpm_signatures) and [upload RPMs](https://github.com/theforeman/theforeman-rel-eng/blob/master/upload_rpms)
- [ ] Kick off the [release pipeline](https://ci.theforeman.org/job/katello-<%= short_version %>-rpm-pipeline/) by calling [release_pipeline](https://github.com/theforeman/theforeman-rel-eng/blob/master/release_pipeline)

# Once release is out
## Release Owner

- [ ] Confirm response that the build succeeded (or if necessary, do more cherry-picks and version bumps repeating the steps above)
- [ ] Post a [release announcement](https://community.theforeman.org/c/release-announcements/8)
<% unless is_rc %>
- [ ] Create and upload [release specific developer stable box](https://github.com/theforeman/forklift/blob/master/packer/README.md#creating-version-specific-katello-devel-boxes)
<% end %>
