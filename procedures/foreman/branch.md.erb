# Near-end of development phase

* [ ] Announce upcoming branching to discourse development category a month before
* [ ] Change `$latest` and `$next` parameters on [web class](https://github.com/theforeman/foreman-infra/blob/master/puppet/modules/web/manifests/init.pp) to point to the new version numbers
* [ ] Refresh unattended templates
  * [ ] Sync the community-templates to Foreman core, by running `script/sync_templates.sh`
  * [ ] Create a <%= @release %>-stable branch in [community-templates](https://github.com/theforeman/community-templates)
* [ ] Add new languages that are at a [reasonable completion on Transifex](https://www.transifex.com/foreman/foreman/foreman/) to **develop**
* [ ] Generate a release GPG key using [GPG_Keys](https://projects.theforeman.org/projects/foreman/wiki/GPG_Keys)
 * publish to keyserver
 * [security.md](https://github.com/theforeman/theforeman.org/blob/gh-pages/security.md) on the website, add public key fingerprint to [static/keys](https://github.com/theforeman/theforeman.org/tree/gh-pages/static/keys)
 * create [releases/<%= release %>/RPM-GPG-KEY-foreman](https://yum.theforeman.org/releases/<%= release %>/RPM-GPG-KEY-foreman) on yum.theforeman.org
*  Ask plugin authors to start extracting i18n strings and pushing the changes into develop/master git branches so Transiflex can pick it up

# Package build systems

* [ ] Clone tags and create build targets in Koji
* [ ] Create mash scripts and configuration on Koji
* [ ] Add new plugin tags to Koji plugins mash script (foreman-mash-split-plugins.py), remove old ones (keep three)
* [ ] Add version <%= release %> to jobs in axes and/or combination filters, remove old ones (keep three)
* [ ] Clone Debian nightly repos to <%= release %> using [copy/freight instructions](https://projects.theforeman.org/projects/foreman/wiki/Debian_Packaging#Project-sources)
* [ ] Edit [foreman-packaging's PR template](https://github.com/theforeman/foreman-packaging/blob/master/.github/PULL_REQUEST_TEMPLATE.md) to add <%= release %> and remove the old release

# Main code repos

* [ ] Make releases of installer modules
  * Tier 0 (no dependencies)
    * [ ] [certs](https://github.com/theforeman/puppet-certs)
    * [ ] [dhcp](https://github.com/theforeman/puppet-dhcp)
    * [ ] [dns](https://github.com/theforeman/puppet-dns)
    * [ ] [foreman](https://github.com/theforeman/puppet-foreman)
    * [ ] [git](https://github.com/theforeman/puppet-git)
    * [ ] [puppet](https://github.com/theforeman/puppet-puppet)
    * [ ] [qpid](https://github.com/theforeman/puppet-qpid)
    * [ ] [tftp](https://github.com/theforeman/puppet-tftp)
  * Tier 1 (Dependencies on Tier 0)
    * [ ] [candlepin](https://github.com/theforeman/puppet-candlepin)
    * [ ] [foreman_proxy](https://github.com/theforeman/puppet-foreman_proxy)
    * [ ] [pulp](https://github.com/theforeman/puppet-pulp)
  * Tier 2 (Dependencies on Tier 1)
    * [ ] [foreman_proxy_content](https://github.com/theforeman/puppet-foreman_proxy_content)
    * [ ] [katello](https://github.com/theforeman/puppet-katello)
* [ ] Update locales in foreman **develop**: `make -C locale tx-update`
* [ ] Create <%= release %>-stable branches
  * [ ] [foreman](https://github.com/theforeman/foreman)
  * [ ] [foreman-installer](https://github.com/theforeman/foreman-installer)
  * [ ] [foreman-selinux](https://github.com/theforeman/foreman-selinux)
  * [ ] [smart-proxy](https://github.com/theforeman/smart-proxy)
* [ ] Branch foreman-packaging
  * [ ] RPMs
  * [ ] debs
* [ ] Bump versions to <%= develop %>-develop
  `echo <%= develop %>-develop > VERSION`
  * [ ] [foreman](https://github.com/theforeman/foreman)
  Also change package.json version field to <%= develop %>.0
  * [ ] [foreman-installer](https://github.com/theforeman/foreman-installer)
  * [ ] [foreman-selinux](https://github.com/theforeman/foreman-selinux)
  * [ ] [smart-proxy](https://github.com/theforeman/smart-proxy)

# Website

* [ ] Copy [website manual content](https://github.com/theforeman/theforeman.org/tree/gh-pages/manuals) from nightly to <%= release %>

# Other systems

* [ ] Create release schedule page for next version (<%= develop %>) linked from [Development_Resources](https://projects.theforeman.org/projects/foreman/wiki/Development_Resources)
* Create Redmine versions
  * [ ] Add next version number (<%= develop %>)
    * [ ] [foreman](https://projects.theforeman.org/projects/foreman/settings/versions)
    * [ ] [foreman-installer](https://projects.theforeman.org/projects/puppet-foreman/settings/versions)
    * [ ] [foreman-selinux](https://projects.theforeman.org/projects/selinux/settings/versions)
    * [ ] [smart-proxy](https://projects.theforeman.org/projects/smart-proxy/settings/versions)
  * [ ] Add first patch release (<%= release %>.1)
    * [ ] [foreman](https://projects.theforeman.org/projects/foreman/settings/versions)
    * [ ] [foreman-installer](https://projects.theforeman.org/projects/puppet-foreman/settings/versions)
    * [ ] [foreman-selinux](https://projects.theforeman.org/projects/selinux/settings/versions)
    * [ ] [smart-proxy](https://projects.theforeman.org/projects/smart-proxy/settings/versions)
* [ ] Update [foreman-dev](https://community.theforeman.org/c/development) with [translations status](https://www.transifex.com/projects/p/foreman/) to encourage 100% translations before release
* [ ] Announce string freeze date on discourse and send announcement via https://www.transifex.com/foreman/foreman/announcements/
* [ ] Create test_<%= release.tr('.', '_') %>_stable.yaml and test_proxy_<%= release.tr('.', '_') %>_stable.yaml for [JJB in foreman-infra](https://github.com/theforeman/foreman-infra/tree/master/puppet/modules/jenkins_job_builder/files/theforeman.org/yaml/jobs), remove the oldest version to keep last 3
* [ ] Ensure current Foreman deprecations for the next release are removed in *develop*
* [ ] Add <%= release %> to [Forklift versions config](https://github.com/theforeman/forklift/blob/master/vagrant/config/versions.yaml)
