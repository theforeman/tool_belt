[ ] Make this post a wiki

## Roles

* Release Owner: <%= owner %>
* Release Engineer: <%= engineer %>
<% unless is_rc && full_version.end_with?('1') -%>
* Installer Maintainer: @
<% end -%>

# Manual updates: <%= target_date %>

## Release Engineer

- [ ] Update manual if applicable for any additional installation steps
- Update [release notes section](https://github.com/theforeman/theforeman.org/tree/gh-pages/_includes/manuals/<%= short_version %>/1.2_release_notes.md) in the manual:
  - [ ] Release notes: bullet point list by category of all changes, include link to bug numbers. 
    - [ ] For [theforeman.org](https://github.com/theforeman/theforeman.org): You can auto-generate changes using the [release notes script](https://github.com/theforeman/theforeman.org/blob/gh-pages/scripts/release_notes.rb).
    - [ ] For [docs.theforeman.org](https://github.com/theforeman/foreman-documentation): You can auto-generate changes using [redmine_release_notes](https://github.com/theforeman/foreman-documentation/blob/<%= short_version %>/guides/doc-Release_notes/redmine_release_notes) script, more details are available in [README](https://github.com/theforeman/foreman-documentation/blob/<%= short_version %>/guides/doc-Release_notes/README.md).
  - [ ] Append CLI release notes taken from the [hammer-cli](https://github.com/theforeman/hammer-cli/blob/<%= short_version %>-stable/doc/release_notes.md) and [hammer-cli-foreman](https://github.com/theforeman/hammer-cli-foreman/blob/<%= short_version %>-stable/doc/release_notes.md) changelogs, in [theforeman.org](https://github.com/theforeman/theforeman.org/trees/gh-pages/_includes/manuals/<%= short_version %>/1.2_release_notes.md) and [docs.theforeman.org](https://github.com/theforeman/foreman-documentation/tree/<%= short_version %>/guides/doc-Release_notes/topics/foreman-<%= full_version %>.adoc) websites release notes.
<% if (is_rc || full_version.end_with?('0')) -%>
  - [ ] Headline features: half a dozen important features with a few sentences description each
  - [ ] Upgrade notes on [theforeman.org](https://github.com/theforeman/theforeman.org) and [docs.theforeman.org](https://github.com/theforeman/foreman-documentation): all important notices that users must be aware of before upgrading
- [ ] Update installer options section using the [get-params script](https://github.com/theforeman/theforeman.org/blob/gh-pages/scripts/installer/get-params) (Note: this step can only be done after packages are released)
[ ] [Generate](https://github.com/theforeman/apidocs#adding-new-version) the apipie docs and raise pull request in [apidocs](https://github.com/theforeman/apidocs) repository
<% else -%>
- [ ] Update installer options section using the [get-params script](https://github.com/theforeman/theforeman.org/blob/gh-pages/scripts/installer/get-params) if any changes were made in the installer or installer modules (after new packages have been released)
- [ ] [Update](https://github.com/theforeman/apidocs#adding-new-version) the apipie docs and place those in the [foreman/<%= short_version %>/apidoc](https://github.com/theforeman/apidocs/tree/gh-pages/foreman/<%= short_version %>/apidoc) directory if any changes were made to the API
<% end -%>

# Preparing code: <%= target_date %>
<% unless is_rc && full_version.end_with?('1') -%>

## Installer Maintainer

- [ ] Make patch releases of installer modules that have important changes
  - [ ] Branch to MAJ.MIN-stable if recent changes to the module aren't suitable for patch (x.y.z) release
<% end -%>

## Release Owner

<% unless (is_rc || full_version.end_with?('.0')) -%>
- [ ] Add a new [Redmine version](https://projects.theforeman.org/projects/foreman/settings/versions) for the next minor, unless the series is EOL. Be sure the version is set to sharing with subprojects.
<% end -%>
- [ ] Remove/change target version field for any open Redmine tickets assigned to the release still (next minor, unset it or reject)
- [ ] Ensure that code in git matches issues fixed in <%= full_version %> in redmine. [issues.rb](https://gist.github.com/tbrisker/3320097f1d8c9abfb2dbcf8d8e216bba) can be used to generate a comparison between the two.
<% unless is_rc -%>
- [ ] Change Redmine version <%= full_version %> state to Closed
<% end -%>

# Tagging a release: <%= target_date %>

## Release Owner

- In foreman <%= short_version %>-stable:
  - [ ] Make sure [test_<%= short_version.tr('.', '_') %>_stable](https://ci.theforeman.org/job/test_<%= short_version.tr('.', '_') %>_stable/) is green
<% if (is_rc || full_version.end_with?('0')) -%>
  - [ ] run `make -C locale tx-update`
<% end -%>
  - [ ] Tag the release using [tag.sh](https://gist.github.com/tbrisker/d51cedea51ccbcca00e72c1fc61550fe) `tag.sh <%= full_version %> && git push upstream <%= short_version %>-stable --follow-tags`
- In smart-proxy <%= short_version %>-stable:
  - [ ] Make sure [test_proxy_<%= short_version.tr('.', '_') %>_stable](https://ci.theforeman.org/job/test_proxy_<%= short_version.tr('.', '_') %>_stable/) is green
  - [ ] Tag the release using [tag.sh](https://gist.github.com/tbrisker/d51cedea51ccbcca00e72c1fc61550fe) `tag.sh <%= full_version %> && git push upstream <%= short_version %>-stable --follow-tags`
- In foreman-selinux <%= short_version %>-stable:
  - [ ] Tag the release using [tag.sh](https://gist.github.com/tbrisker/d51cedea51ccbcca00e72c1fc61550fe) `tag.sh <%= full_version %> && git push upstream <%= short_version %>-stable --follow-tags`
- In foreman-installer <%= short_version %>-stable:
  - [ ] Tag the release using [tag.sh](https://gist.github.com/tbrisker/d51cedea51ccbcca00e72c1fc61550fe) `tag.sh <%= full_version %> && git push upstream <%= short_version %>-stable --follow-tags`
- [ ] Run the Jenkins [Tarballs Release](https://ci.theforeman.org/job/tarballs-release/) to create tarballs

## Release Engineer

- [ ] Update release version similar to [here](https://github.com/theforeman/theforeman-rel-eng/commit/2029a9688da00d9c385c3438dd71b594ba5f728e)
- [ ] Sign Tarballs
  - [ ] [Download](https://github.com/theforeman/theforeman-rel-eng/blob/master/download_tarballs)
  - [ ] [Inspect](https://github.com/theforeman/theforeman-rel-eng/blob/master/inspect_tarballs)
  - [ ] [Sign and upload detached signatures](https://github.com/theforeman/theforeman-rel-eng/blob/master/sign_tarballs)

Note: If for some reason there was an issue with the tarballs that required uploading new tarballs, CDN cache should be invalidated so that the builders use the updated tarballs.

# Packaging a release: <%= target_date %>
<% unless is_rc -%>

**Note** it is considered good practice to release on a day when the next day is a working day. This means no releases on Fridays or on the day before a holiday.
<% end -%>

## Release Engineer

[Background documentation](https://projects.theforeman.org/projects/foreman/wiki/Release_Process#Packaging-a-release)

- [ ] Update [foreman-packaging](https://github.com/theforeman/foreman-packaging) branches
  - [ ] [rpm/<%= short_version %>](https://github.com/theforeman/theforeman-rel-eng/blob/master/bump_rpm_packaging)
  - [ ] [deb/<%= short_version %>](https://github.com/theforeman/theforeman-rel-eng/blob/master/bump_deb_packaging)
- [ ] Wait for packages to be built
  - [ ] [rpm/<%= short_version %>](https://ci.theforeman.org/job/foreman-packaging-rpm-<%= short_version %>-release/)
  - [ ] [deb/<%= short_version %>](https://ci.theforeman.org/job/foreman-packaging-deb-<%= short_version %>-release/)
- [ ] Tag `foreman-release` into `foreman-client-<%= short_version %>-rhel7` and `foreman-client-<%= short_version %>-el8`, as this doesn't happen automatically for those tags. <% if is_rc %>Make sure the build matches the release.<% end %>
  - [ ] `koji tag-build foreman-client-<%= short_version %>-rhel7 foreman-release-<%= version %>-1.el7`
  - [ ] `koji tag-build foreman-client-<%= short_version %>-el8 foreman-release-<%= version %>-1.el8`
- [ ] Tag `yggdrasil` into `foreman-plugins-<%= short_version %>-nonscl-rhel7` and `foreman-plugins-<%= short_version %>-el8`, as this doesn't happen automatically for those tags.
  - [ ] `koji tag-build foreman-plugins-<%= short_version %>-nonscl-rhel7 yggdrasil-VERSION.el7`
  - [ ] `koji tag-build foreman-plugins-<%= short_version %>-el8 yggdrasil-VERSION.el8`
- [ ] Check for outstanding PRs against <%= short_version %> packaging, and merge if possible:
  - [ ] [rpm/<%= short_version%>](https://github.com/theforeman/foreman-packaging/pulls?q=is%3Apr+is%3Aopen+base%3Arpm%2F<%= short_version %>)
  - [ ] [deb/<%= short_version%>](https://github.com/theforeman/foreman-packaging/pulls?q=is%3Apr+is%3Aopen+base%3Adeb%2F<%= short_version %>)
- [ ] Sign the RPMs in the release
  - [ ] [Download](https://github.com/theforeman/theforeman-rel-eng/blob/master/download_rpms)
  - [ ] [Sign](https://github.com/theforeman/theforeman-rel-eng/blob/master/sign_rpms)
  - [ ] [Upload RPM signatures](https://github.com/theforeman/theforeman-rel-eng/blob/master/upload_rpm_signatures)
  - [ ] [Upload RPMs](https://github.com/theforeman/theforeman-rel-eng/blob/master/upload_rpms)
- [ ] Sign RPMs for client repos (call scripts with `PROJECT=client`)
  - [ ] [Download](https://github.com/theforeman/theforeman-rel-eng/blob/master/download_rpms)
  - [ ] [Sign](https://github.com/theforeman/theforeman-rel-eng/blob/master/sign_rpms)
  - [ ] [Upload RPM signatures](https://github.com/theforeman/theforeman-rel-eng/blob/master/upload_rpm_signatures)
  - [ ] [Upload RPMs](https://github.com/theforeman/theforeman-rel-eng/blob/master/upload_rpms)
- [ ] Kick off the [release pipeline](https://ci.theforeman.org/job/foreman-<%= short_version %>-release-pipeline/) by calling [`release_pipeline`](https://github.com/theforeman/theforeman-rel-eng/blob/master/release_pipeline)
- [ ] Kick off the [client pipeline](https://ci.theforeman.org/job/foreman-client-<%= short_version %>-rpm-pipeline/) by calling [`PROJECT=client release_pipeline`](https://github.com/theforeman/theforeman-rel-eng/blob/master/release_pipeline)
- [ ] Kick off the [plugins pipeline](https://ci.theforeman.org/job/foreman-plugins-<%= short_version %>-rpm-pipeline/) by calling [plugins_pipeline](https://github.com/theforeman/theforeman-rel-eng/blob/master/plugins_pipeline)

# After the packages have been released

# Release Owner

<% unless is_rc -%>
- [ ] Update the versions on the website in [version](https://github.com/theforeman/theforeman.org/blob/gh-pages/_includes/version.html) and [latest news](https://github.com/theforeman/theforeman.org/blob/gh-pages/_includes/latest_news.html)
<% end -%>
<% if is_rc && full_version.end_with?('1') -%>
- [ ] Add the <%= short_version %> in `foreman_versions` list in website's [`_config.yml`](https://github.com/theforeman/theforeman.org/blob/gh-pages/_config.yml) file
<% end -%>
<% if full_version.end_with?('.0') %>
- [ ] Update the `foreman_version` to <%= short_version %> in website's [`_config.yml`](https://github.com/theforeman/theforeman.org/blob/gh-pages/_config.yml) file
<% end -%>
- [ ] Announce the release on [Discourse](https://community.theforeman.org/c/release-announcements/8)
- [ ] Update the topic in #theforeman channel on Freenode
- [ ] Share the release announcement on twitter
<% if full_version.end_with?('.0') %>
- [ ] After about a week, update `stable` version in [foreman-infra](https://github.com/theforeman/foreman-infra/blob/master/puppet/modules/profiles/manifests/web.pp#L24)
<% end -%>
- [ ] Release pipeline will trigger [foreman-plugins-<%= short_version %>-deb-test-pipeline](https://ci.theforeman.org/job/foreman-plugins-<%= short_version %>-deb-test-pipeline/) and [foreman-plugins-<%= short_version %>-rpm-test-pipeline](https://ci.theforeman.org/job/foreman-plugins-<%= short_version %>-rpm-test-pipeline/). These don't block releases but can be used to understand known issues around plugin compatibility with Foreman <%= short_version %>.
